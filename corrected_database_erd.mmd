erDiagram
    MODULE {
        int id PK
        string name
        string path
    }
    
    FUNCTION_TABLE {
        int id PK
        int module_id FK
        string name
        string function_signature
        string src_loc
        string raw_string
        string type_enum
        int line_number_start
        int line_number_end
        string fully_qualified_path
        bool is_method
        json self_type
        json input_types
        json output_types
        json types_used
        json literals_used
        json methods_called
        string visibility
        text doc_comments
        json attributes
        string crate_name
        string module_path
        int impl_block_id FK
        json function_input
        json function_output
        string instances_used
    }
    
    CLASS_TABLE {
        int id PK
        int module_id FK
        string class_name
        text class_definition
        string src_location
        int line_number_start
        int line_number_end
    }
    
    TYPE_TABLE {
        int id PK
        int module_id FK
        string type_name
        int line_number_start
        int line_number_end
        string type_of_type
        text raw_code
        string src_loc
        string fully_qualified_path
        json fields
        string visibility
        text doc_comments
        json attributes
        string crate_name
        string module_path
    }
    
    IMPORT {
        int id PK
        int module_id FK
        string src_loc
        string module_name
        string package_name
        bool is_boot_source
        bool is_safe
        bool is_implicit
        string as_module_name
        string qualified_style
        bool is_hiding
        json hiding_specs
        int line_number_start
        int line_number_end
        text path
        string visibility
    }
    
    INSTANCE {
        int id PK
        int module_id FK
        text instance_definition
        string src_loc
        text instance_signature
        int line_number_start
        int line_number_end
    }
    
    CONSTANT {
        int id PK
        int module_id FK
        string name
        string fully_qualified_path
        text src_code
        string src_location
        int line_number_start
        int line_number_end
        json const_type
        string visibility
        text doc_comments
        json attributes
        bool is_static
        string crate_name
        string module_path
    }
    
    TRAIT {
        int id PK
        int module_id FK
        string name
        string fully_qualified_path
        string src_location
        string module_name
        string module_path
        string crate_name
    }
    
    TRAIT_METHOD_SIGNATURE {
        int id PK
        int module_id FK
        int trait_id FK
        string name
        string fully_qualified_path
        text src_code
        string src_location
        int line_number_start
        int line_number_end
        json input_types
        json output_types
        string visibility
        text doc_comments
        json attributes
        bool is_async
        bool is_unsafe
        string crate_name
        string module_path
        string module_name
    }
    
    IMPL_BLOCK {
        int id PK
        int module_id FK
        int trait_id FK
        string crate_name
        string module_path
        string module_name
        string src_location
        int line_number_start
        int line_number_end
        text struct_name
        text struct_fqp
        string trait_name
        string trait_fqp
    }
    
    FUNCTION_CALLED {
        int id PK
        int function_id FK
        int where_function_id FK
        string module_name
        text function_name
        text name
        string package_name
        string src_loc
        text type_enum
        text function_signature
        string fully_qualified_path
        bool is_method
        json receiver_type
        json input_types
        json output_types
        int line_number
        int column_number
        string origin_crate
        string origin_module
        string call_type
    }
    
    WHERE_FUNCTION {
        int id PK
        int parent_function_id FK
        string name
        text function_signature
        text raw_string
        string src_loc
        string fully_qualified_path
        json input_types
        json output_types
        json types_used
        json literals_used
        json methods_called
        bool is_method
        json self_type
        string visibility
        text doc_comments
        json attributes
    }
    
    CONSTRUCTOR {
        int id PK
        int type_id FK
        string name
    }
    
    FIELD {
        int id PK
        int constructor_id FK
        string field_name
        text field_type_raw
        json field_type_structure
    }
    
    INSTANCE_FUNCTION {
        int id PK
        int instance_id FK
        int function_id FK
    }
    
    FUNCTION_DEPENDENCY {
        int caller_id FK
        int callee_id FK
    }
    
    TYPE_DEPENDENCY {
        int dependent_id FK
        int dependency_id FK
    }
    
    %% Primary Relationships
    MODULE ||--o{ FUNCTION_TABLE : "contains"
    MODULE ||--o{ CLASS_TABLE : "contains"
    MODULE ||--o{ TYPE_TABLE : "contains"
    MODULE ||--o{ IMPORT : "contains"
    MODULE ||--o{ INSTANCE : "contains"
    MODULE ||--o{ CONSTANT : "contains"
    MODULE ||--o{ TRAIT : "contains"
    MODULE ||--o{ IMPL_BLOCK : "contains"
    MODULE ||--o{ TRAIT_METHOD_SIGNATURE : "contains"
    
    %% Trait Relationships
    TRAIT ||--o{ TRAIT_METHOD_SIGNATURE : "has_methods"
    TRAIT ||--o{ IMPL_BLOCK : "implemented_by"
    
    %% Implementation Block Relationships
    IMPL_BLOCK ||--o{ FUNCTION_TABLE : "contains_methods"
    
    %% Function Relationships
    FUNCTION_TABLE ||--o{ FUNCTION_CALLED : "calls"
    FUNCTION_TABLE ||--o{ WHERE_FUNCTION : "has_nested"
    WHERE_FUNCTION ||--o{ FUNCTION_CALLED : "calls"
    
    %% Type Relationships
    TYPE_TABLE ||--o{ CONSTRUCTOR : "has_constructors"
    CONSTRUCTOR ||--o{ FIELD : "has_fields"
    
    %% Instance Relationships
    INSTANCE ||--o{ INSTANCE_FUNCTION : "links_to"
    FUNCTION_TABLE ||--o{ INSTANCE_FUNCTION : "linked_from"
    
    %% Self-Referential Relationships (Many-to-Many)
    FUNCTION_TABLE ||--o{ FUNCTION_DEPENDENCY : "caller"
    FUNCTION_TABLE ||--o{ FUNCTION_DEPENDENCY : "callee"
    
    TYPE_TABLE ||--o{ TYPE_DEPENDENCY : "dependent"
    TYPE_TABLE ||--o{ TYPE_DEPENDENCY : "dependency"
